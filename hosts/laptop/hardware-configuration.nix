# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  networking = {
    hostName = "thinkpad"; # Define your hostname.
    networkmanager.enable = true;
    firewall.allowedTCPPorts = [ 22 ];
  };
  boot = {
    initrd = {
      availableKernelModules = [ "nvme" "xhci_pci" "sdhci_pci" ];
      kernelModules = [ "amdgpu" ];
    };
    kernelModules = [ "kvm-amd" ];
    extraModulePackages = [ ];
  };

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/315d2820-6ae2-4c4c-82dd-d807eb860416";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/5090-32C8";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  networking.interfaces.enp2s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  # fonts.optimizeForVeryHighDPI = lib.mkDefault true;  # deprecated
  hardware = {
    cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    logitech.wireless = {
      enable = true;
      enableGraphical = true;
    };
    # hardware.opengl.extraPackages = [ "rocm-opencl-icd" ];
    opengl.extraPackages = with pkgs; [
      amdvlk
      rocm-opencl-icd
      rocm-opencl-runtime
    ];
    # high-resolution display
    # video.hidpi.enable = lib.mkDefault true;  # deprecated
    opengl.enable = true;
    opengl.driSupport = true;
  };
}
